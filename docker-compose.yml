version: '3.9'
# usage:
# (sudo) docker-compose up -d
# (sudo) docker-compose down
services: 
  mongodb:
    image: mongo:4.4.22
    container_name: bonsai_mongodb
    ports:
      - "27017:27017"
    expose:
      - "27017"
    networks:
      - bonsai-net

  redis:
    image: redis:7.0.10
    networks:
      - bonsai-net

  api:
    container_name: api
    build: 
      context: api
      network: host
    depends_on:
      - mongodb
      - minhash_service
      - allele_cluster_service
    ports: 
      - "8001:8000"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    environment:
      - ALLOWED_ORIGINS=["*"]
      - DB_HOST=mongodb
    networks:
      - bonsai-net
    command: "uvicorn bonsai_api.main:app --reload --log-level debug --host 0.0.0.0"

  frontend:
    container_name: frontend
    build: 
      context: frontend
      network: host
    depends_on:
      api:
        condition: service_healthy
        restart: true
    ports: 
      - "8811:5000"
    volumes:
      - "./frontend/bonsai_app:/home/worker/app/bonsai_app"
    environment:
      - FLASK_APP=bonsai_app.app:create_app
      - FLASK_ENV=development 
    networks:
      - bonsai-net
    command: "flask run --reload --debug --host 0.0.0.0"

  minhash_service:
    container_name: minhash_service
    build: 
      context: minhash_service
      network: host
    depends_on:
      - redis
    volumes:
      - "./volumes/api/genome_signatures:/data/signature_db"
    networks:
      - bonsai-net

  allele_cluster_service:
    container_name: allele_cluster_service
    build: 
      context: allele_cluster_service
      network: host
    depends_on:
      - redis
    networks:
      - bonsai-net

networks:
  bonsai-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.0.20.0/24
